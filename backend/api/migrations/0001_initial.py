# Generated by Django 2.2.16 on 2020-09-13 11:48

import backend.api.models.base
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.CharField(db_index=True, default=backend.api.models.base.get_new_id, max_length=8, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this row should be treated as active. Unselect this instead of deleting it.', verbose_name='active')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='creation date')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='edition date', null=True)),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True, verbose_name='email address')),
                ('rut', models.CharField(db_index=True, max_length=20, verbose_name='rut')),
                ('first_name', models.CharField(blank=True, default='', max_length=30, null=True, verbose_name='first name')),
                ('middle_name', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='middle name')),
                ('last_name', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='last name')),
                ('mothers_family_name', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='mothers family name')),
                ('thumbnail', models.CharField(default='/static/default_user.png', max_length=1000, verbose_name='thumbnail')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, help_text='The date this user was created in the database', verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.CharField(db_index=True, default=backend.api.models.base.get_new_id, max_length=8, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this row should be treated as active. Unselect this instead of deleting it.', verbose_name='active')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='creation date')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='edition date', null=True)),
                ('message', models.CharField(blank=True, max_length=300)),
                ('seen', models.BooleanField(default=False, help_text='Designates whether this notification has been seen by the user.', verbose_name='seen')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
